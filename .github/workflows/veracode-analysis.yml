#此工作流将启动Veracode静态分析管道扫描，返回一个结果.json并转换为sarif作为代码扫描警报n nname：Veracode静态分析管道扫描n non：n Push：n分支：[master]n拉请求：n#下面的分支必须是n分支之上分支的子集：[master]n调度：n-cron：‘27 7**6’n n#工作流运行由一个或多个可以顺序运行或并行运行的作业组成：n#此工作流包含构建和提交管道扫描的作业，您将需要相应地自定义构建过程，并确保将构建的工件用作管道扫描文件参数n构建和管道扫描的文件输入-扫描：n#作业将在n个运行上运行的运行程序的类型-on-Ubuntu-最新n步：n#检查$GitHub_工作区下的存储库，这样您的作业可以访问它并将所有源复制到ZIP文件中以供分析。将此部分替换为您的应用程序构建步骤n-用途：action/checkout@v2n，使用：n存储库：‘nn-use：Papeloto/action-zip@v1 n，使用：n文件：/n递归：true n est：veracode-管道-管道扫描-结果扫描-sarif.zip n-使用：action/pload-工件@v1 n和：n名称：my-工件路径：Veracode-管道-扫描-结果-sarif.zip n#下载Veracode静态分析管道扫描JAR n-使用：ww/curl@master n With：n args：-o https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip n-run：unzip-o管道-扫描-lATEST.zip n n-用途：action/setup-java@v1 n with：n java-version：1.8 n-运行：JAVA-JAR管道-can.jar--Veracode_api_id“${sections.VERACODE_API_ID}}”--Veracode_API_key“${Incres.VERACODE_API_KEY}}”--FILE_ON_SURITY=“VERACODE_API_ID}}”高“-文件veracode-管道-扫描-结果到-sarif.zip n继续-on-on错误：true n-用途：操作/上载-工件@v1n与：n名称：sccanResenpath：结果.jsonn-name：将管道扫描输出转换成sarif格式n id：veracode/veracode-pipeline-scan-results-to-sarif@master n使用：n管道-结果-json：结果.json：结果.jsonN-用途：gitHub/codeql-action/uppload-sarif@v1n与：n#path to sarif文件相对于存储库的根目录n sarif_file：veracode-Resul.sarif
